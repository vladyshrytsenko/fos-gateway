version: '3.8'

services:
  gateway:
    build: .
    image: fos-gateway-image
    container_name: fos-gateway
    ports:
      - "8085:8085"
    environment:
      GATEWAY_GLOBALCORS_CORS_CONFIGURATIONS_[/**]_ALLOWED_ORIGINS: "http://localhost:3000"
      GATEWAY_ROUTES_FOS_AUTH_URI: "http://auth:9000"
      GATEWAY_ROUTES_FOS_CORE_URI: "http://core:8080"
      GATEWAY_ROUTES_FOS_SUPPORT_URI: "http://support:8095"
    restart: always
    networks:
      - fos-network
    depends_on:
      - auth
      - core
      - support

  auth:
    build:
      context: ../fos-auth
    image: fos-auth-image
    container_name: fos-auth
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-auth:5432/fos-auth-db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password

      # Authorization Server configuration
      CLIENT_OIDC_CLIENT_REGISTRATION_CLIENT_ID: client
      CLIENT_OIDC_CLIENT_REGISTRATION_CLIENT_SECRET: secret
      CLIENT_OIDC_CLIENT_REGISTRATION_REDIRECT_URIS: http://localhost:3000/auth-callback
      #      CLIENT_OIDC_CLIENT_REGISTRATION_REDIRECT_URIS: http://localhost:4200/auth-callback
      #      CLIENT_OIDC_CLIENT_REGISTRATION_REDIRECT_URIS: http://localhost:8090/auth-callback
      CLIENT_OIDC_CLIENT_REGISTRATION_POST_LOGOUT_REDIRECT_URIS: http://localhost:3000/login
#      CLIENT_OIDC_CLIENT_REGISTRATION_POST_LOGOUT_REDIRECT_URIS: http://localhost:4200/login
      CLIENT_OIDC_CLIENT_JWT_SET_URI: http://gateway:8085/oauth2/jwks

      # Google
      CLIENT_REGISTRATION_GOOGLE_CLIENT_ID: 653875561290-jtd5p8sda5ulj7ul6s2dofkmq7k1neht.apps.googleusercontent.com
      CLIENT_REGISTRATION_GOOGLE_CLIENT_SECRET: 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
      CLIENT_REGISTRATION_GOOGLE_REDIRECT_URI: http://gateway:8085/login/oauth2/code/google

      #Github
      CLIENT_REGISTRATION_GITHUB_CLIENT_ID: github-client-id
      CLIENT_REGISTRATION_GITHUB_CLIENT_SECRET: github-client-secret
      CLIENT_REGISTRATION_GITHUB_REDIRECT_URI: http://gateway:8085/login/oauth2/code/github

      JWT_ISSUER-URI: http://gateway:8085
      CORS_ALLOWED_ORIGINS: http://localhost:4200, http://localhost:8085, http://localhost:3000
    expose:
      - "9000"
    depends_on:
      - postgres-auth
    networks:
      - fos-network
    restart: on-failure

  core:
    build:
      context: ../fos-core
    image: fos-core-image
    container_name: fos-core
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-core:5432/fos-core-db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password

      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_VIRTUAL_HOST: vhost
      SPRING_RABBITMQ_USERNAME: rab
      SPRING_RABBITMQ_PASSWORD: 1234
      SPRING_RABBITMQ_PORT: 5672

      STRIPE_API_KEY: pk_test_51QEqbRLpw8bYPSLySTjaEWbMfx1YsX30zlK3bprzDi8QAMM4CpqvZq9npLF1KviVmaUY82wicPNqHhX2F4s3VTdz00Acy35Wcx
      STRIPE_API_SECRET_KEY: sk_test_51QEqbRLpw8bYPSLy6e8b7q636ScJIPrQaqnMbduJiihJLlO0CBBVcJqzv9F7Yi3k5bOMGYFRH2ypB7VlvRESmctD00FIoFCKuN

      CLIENT_OIDC_CLIENT_JWT_SET_URI: http://gateway:8085/oauth2/jwks

      JWT_ISSUER-URI: http://gateway:8085

      CORS_ALLOWED_ORIGINS: http://localhost:3000
#      CORS_ALLOWED_ORIGINS: http://localhost:4200
      FEIGN_AUTH_SERVICE_URL: http://auth:9000
    expose:
      - "8080"
    depends_on:
      - postgres-core
      - rabbitmq
    networks:
      - fos-network
    restart: on-failure

  support:
    build:
      context: ../fos-support
    image: fos-support-image
    container_name: fos-support
    environment:
      SPRING_DATA_MONGODB_DATABASE: fos-support-db
      SPRING_DATA_MONGODB_USERNAME: user-mongo
      SPRING_DATA_MONGODB_PASSWORD: password-mongo

      CLIENT_OIDC_CLIENT_JWT_SET_URI: http://gateway:8085/oauth2/jwks

      JWT_ISSUER-URI: http://gateway:8085

      CORS_ALLOWED_ORIGINS: http://localhost:3000
    expose:
      - "8095"
    depends_on:
      - mongo
    networks:
      - fos-network
    restart: on-failure

  postgres-auth:
    image: postgres:15
    container_name: fos-auth-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: fos-auth-db
    volumes:
      - postgres-auth-data:/var/lib/postgresql/data
    networks:
      - fos-network
    restart: on-failure

  postgres-core:
    image: postgres:15
    container_name: fos-core-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: fos-core-db
    volumes:
      - postgres-core-data:/var/lib/postgresql/data
    networks:
      - fos-network
    restart: on-failure

  mongo:
    image: mongo:6.0
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: user-mongo
      MONGO_INITDB_ROOT_PASSWORD: password-mongo
      MONGO_INITDB_DATABASE: fos-support-db
    volumes:
      - mongo-data:/var/lib/mongo/data
    networks:
      - fos-network
    restart: on-failure

  rabbitmq:
    image: rabbitmq:latest
    container_name: rabbitmq
    hostname: rabbitmq
    restart: on-failure
    environment:
      RABBITMQ_DEFAULT_USER: rab
      RABBITMQ_DEFAULT_PASS: 1234
      RABBITMQ_DEFAULT_VHOST: vhost
      RABBITMQ_DEFAULT_USER_TAGS: administrator
      RABBITMQ_DEFAULT_PERMISSIONS: ".* .* .*"
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    networks:
      - fos-network

volumes:
  rabbitmq:
  postgres-auth-data:
  postgres-core-data:
  mongo-data:

networks:
  fos-network:
    driver: bridge
